{"version":3,"sources":["components/hash.js","common/Constants.js","components/Login.js","components/Search.js","common/SongCard.js","components/Songs.js","components/Main.js","App.js","index.js"],"names":["hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","BASE_URL","SCOPES","Login","react_default","a","createElement","className","href","concat","join","Search","props","onSearch","onSearchChange","searchField","type","placeholder","onChange","onClick","SongCard","_props$list","list","name","artistNameArr","artists","_props$list$album","album","images","Object","slicedToArray","release_date","artistName","key","i","src","url","style","height","alt","Songs","_this$props","this","tracksAvailable","onPageChange","length","map","common_SongCard","React","Component","Main","components_Search","components_Songs","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","setState","target","value","_ref","asyncToGenerator","regenerator_default","mark","_callee","_this$state","offset","token","FETCH_URL","wrap","_context","prev","next","state","encodeURIComponent","fetch","method","headers","Authorization","then","res","json","data","tracks","items","catch","error","console","stop","_x","apply","arguments","log","bind","assertThisInitialized","_token","access_token","components_Main","components_Login","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b4e175c8.chunk.js","sourcesContent":["// Getting the hash from the url\r\nconst hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function (initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n\r\n\r\nexport default hash;","// i store my constants in a different location, i'm trying to be more organized with my code.\r\n\r\n\r\nexport const CLIENT_ID = '7de21a20993e45e3944b3617cea27a7b'; // Your client id\r\nexport const AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nexport const REDIRECT_URI = \"http://localhost:3000/\";\r\nexport const BASE_URL = 'https://api.spotify.com/v1/search?';\r\nexport const SCOPES = [\r\n  \"user-read-private\",\r\n  \"user-read-email\",\r\n];","import React from 'react';\r\nimport { CLIENT_ID, AUTH_ENDPOINT, REDIRECT_URI, SCOPES } from '../common/Constants';\r\nimport '../styles/Login.css';\r\n\r\n// here is the first thing that the user encounters, this is where i take them to the spotify authentication\r\n// i bring my constants to use template literals to join them together with the href\r\nconst Login = () => {\r\n  return (\r\n    <div className='login-container'>\r\n      <h1 className='title'>Kreitech Test</h1>\r\n      <a className=\"btn\"\r\n        href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES.join(\r\n          \"%20\")}&response_type=token&show_dialog=true`}>Login to Spotify\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport '../styles/Main.css'\r\n\r\n\r\nconst Search = (props) => {\r\n    const { onSearch, onSearchChange, searchField } = props;\r\n    return (\r\n        <div className='searchBar'>\r\n            <input type=\"text\" className='search-box' placeholder='what do you want to search today?' onChange={onSearchChange} />\r\n            <button type='submit' className='search-btn' onClick={() => onSearch(searchField)}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport '../styles/Songs.css';\n\n// The individual information of each track\nconst SongCard = (props) => {\n    const { name, artists: artistNameArr, album: { images: [images], release_date }, } = props.list;\n    const [{ name: artistName }] = artistNameArr;\n    return (\n        <div key={props.i} className='card-container'>\n            <img src={images.url} style={{ height: '180px' }} alt='album' />\n            <p className='song-title'>{name}</p>\n            <p className='artist'>{artistName}</p>\n            <p className='release'>{release_date}</p>\n        </div>\n    )\n}\n\nexport default SongCard;","import React from 'react';\nimport SongCard from '../common/SongCard';\nimport '../styles/Songs.css';\n// here is the principal component, it's a grid in here i can render each songCard\nclass Songs extends React.Component {\n    render() {\n        const { tracksAvailable, onPageChange } = this.props;\n        if (tracksAvailable.length !== 0) {\n            return (\n                <div>\n                    <div className='tracks-titles'>\n                        {tracksAvailable.map((list, i) => <SongCard key={i} list={list} />)}\n                    </div>\n                    <div className='pageBtns'>\n                        <button className='pageBtn nextBtn' onClick={() => onPageChange('next')} >next</button>\n                        <button className='pageBtn prevBtn' onClick={() => onPageChange('previous')} >previous</button>\n                    </div>\n                </div>\n            )\n        } else {\n            return (<h1>No songs, you can start searching!</h1>)\n        }\n    }\n}\n\nexport default Songs;","import React from 'react';\r\nimport Search from './Search';\r\nimport Songs from './Songs';\r\nimport '../styles/Main.css';\r\n// This is my approach to separate each component\r\nconst Main = (props) => {\r\n    const { onSearch, onSearchChange, searchField, tracksAvailable, onPageChange } = props;\r\n    return (\r\n        <div className='container'>\r\n            <Search onSearch={onSearch} onSearchChange={onSearchChange} searchField={searchField} />\r\n            <Songs tracksAvailable={tracksAvailable} onPageChange={onPageChange} />\r\n        </div>\r\n    )\r\n}\r\nexport default Main;","import React from 'react';\nimport hash from './components/hash';\nimport './styles/App.css';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport { BASE_URL } from './common/Constants';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchField: '',\n      token: null,\n      offset: 0,\n      tracks: []\n    }\n    this.onSearch = this.onSearch.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onPageChange = this.onPageChange.bind(this);\n  }\n\n  componentDidMount() {\n    // getting the token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n\n    }\n  }\n  // Getting the value from the searchbox to the state\n  onSearchChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      searchField: e.target.value\n    });\n  }\n  // Fetching the spotify api \n  onSearch = async (props) => {\n    const { searchField, offset, token } = this.state;\n\n    const FETCH_URL = `${BASE_URL}q=${encodeURIComponent(searchField)}&type=track&offset=${offset}`;\n\n    await fetch(FETCH_URL, {\n      method: 'GET',\n      headers: { 'Authorization': 'Bearer ' + token }\n    })\n      .then(res => res.json())\n      .then(data => this.setState({\n        tracks: data.tracks.items\n      }))\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  // Setting the offset from the button, this will change the page from the spotify api\n  onPageChange = (props) => {\n\n    let { offset } = this.state;\n\n    if (props === 'next') {\n      this.setState({ offset: (offset += 10) });\n      // and calling this function, in this way i can fetch the api with the new offset value\n      this.onSearch();\n    }\n    if (props === 'previous') {\n      if (this.state.offset > 0) {\n        this.setState({ offset: (offset -= 10) })\n        this.onSearch();\n      } else console.log('offset is already 0');\n    }\n\n\n  }\n  render() {\n    const { tracks } = this.state;\n    return (\n      <div className=\"App\">\n        {!this.state.token ? <Login /> : <Main onSearch={this.onSearch} onSearchChange={this.onSearchChange} tracksAvailable={tracks} onPageChange={this.onPageChange} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}